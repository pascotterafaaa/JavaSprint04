# ESTÁGIO 1: Build da Aplicação com Maven
# Utiliza uma imagem base com Maven e JDK para compilar o Quarkus.
FROM maven:3.9-eclipse-temurin-21 AS build

# Define o diretório de trabalho na imagem de build
WORKDIR /app

# Otimização de Cache: Copia os arquivos de configuração do projeto.
# Assume que o Dockerfile está na raiz e o código em 'code-with-quarkus'.
COPY code-with-quarkus/pom.xml .
COPY code-with-quarkus/.mvn .mvn
COPY code-with-quarkus/mvnw .
COPY code-with-quarkus/mvnw.cmd .

# Baixa as dependências para acelerar builds futuros (camada de cache)
# O '-B' é para o modo batch, que é ideal para ambientes de build.
RUN mvn dependency:go-offline -B

# Copia o código-fonte restante
COPY code-with-quarkus/src ./src

# Compila o projeto e cria o fast-jar do Quarkus, pulando os testes
RUN mvn package -B -Dquarkus.package.type=fast-jar -DskipTests


# ESTÁGIO 2: Imagem final de execução
# Utiliza a imagem base recomendada para Quarkus (OpenJDK UBI)
FROM registry.access.redhat.com/ubi9/openjdk-21:1.23

# Define o usuário e o diretório de trabalho para segurança e padronização
USER 185
WORKDIR /deployments

# Copia APENAS os artefatos compilados do estágio 'build'
# O diretório 'quarkus-app' contém o jar executável e as bibliotecas necessárias.
COPY --from=build --chown=185:0 /app/target/quarkus-app/ .

# Expõe a porta da aplicação
EXPOSE 8080

# Comando para iniciar a aplicação em modo fast-jar
CMD ["java", "-jar", "quarkus-run.jar"]
